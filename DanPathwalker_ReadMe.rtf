{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 PathWalker Gorgon Interface: ReadMe\
Description: Preprocesses (normalization), generates pseudo atoms, and performs Pathwalking as described in steps 1, 2, and 3 of page 2 in these directions:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://blake.bcm.edu/emanwiki/Ws2015?action=AttachFile&do=get&target=PathwalkerGorgonTutorial.pdf"}}{\fldrslt \cf0 http://blake.bcm.edu/emanwiki/Ws2015?action=AttachFile&do=get&target=PathwalkerGorgonTutorial.pdf}}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
New files and folders: \
	-Gorgon/src_py/pathwalker.py - Executes path walking commands using interface \
	-Gorgon/src_py/ui_dialog_pathwalker.py - Pathwalker GUI\
	-Gorgon/src_py/EMAN2:\
		-e2proc3d.py\
		-e2segment3d.py\
		-e2pathwalker.py\
		-LKH executable\
		-supporting files for import\
\
Example run-through using sub-A.mrc:\
1. After building properly, open Gorgon by navigating to run folder and typing \'91python Gorgon.pyw\'92.\
2. From the menu, navigate to Actions > C-Alpha Atoms > Pathwalking\
3. Under the preprocessing tab, click \'93Volume\'85\'94 and use the file browser to navigate to sub-A.mrc and select it.\
4. Click Preprocess. Using the default \'93Processor 1\'94 and Processor 2\'94 as indicated in the interface, this is equivalent to \
	\'93
\f1 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 e2proc3d.py sub-A.mrc map.mrc --process normalize.edgemean -- process threshold.belowtozero\'94\
\
	Wait until preprocessing has finished as indicated by the volume appearing on screen, or by \'93finished processing\'94 appearing in the terminal. \
\
5. After preprocessing is complete, the Volume Visualization window will appear to allow for visual adjustments. Navigate back to the Pathwalker interface using the bottom tabs. Proceed to the pseudo atom generation tab (second tab), and click the \'93Generate PseudoAtoms\'94 button. Using the default input as indicated in the interface, this is equivalent to\
\
	\'93e2segment3d.py map.mrc --pdbout=pseudoatoms.pdb -- process=segment.kmeans:ampweight=1:nseg=1022:verbose=1:minsegsep=1:pseudoatom= 1:thr=10\'94\
\
	Wait until preprocessing has finished as indicated by the pseudo atom pdb file appearing on screen, or by   \'93Finished Generating Pseudo-Atoms\'94 appearing in the terminal.\
\
6. After pseudo-atom generation is complete, the C-Alpha Visualization window will appear \cf0 \outl0\strokewidth0 to allow for visual adjustments. Navigate back to the Pathwalker interface using the bottom tabs. Proceed to the Pathwalk tab (third tab), and click the \'93Pathwalk\'94 button. Using the default input as indicated in the interface, this is equivalent to\
\
	\'93\cf2 \outl0\strokewidth0 \strokec2 e2pathwalker.py pseudoatoms.pdb --mapfile=map.mrc -- output=path0.pdb --solver=lkh --overwrite --dmin=1 --dmax=10 --mapthresh=12 -- mapweight=200\'94\
\
Path walking is complete once the path pdb file appears on screen, or by \'93Finished Pathwalking\'94 appearing in the terminal. This will generate the files \'93path0.pdb\'94 and \'93path0.pdb.json\'94 in the run directory.\
\
}